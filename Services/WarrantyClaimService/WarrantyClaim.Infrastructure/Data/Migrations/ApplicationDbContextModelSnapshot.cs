// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WarrantyClaim.Infrastructure.Data;

#nullable disable

namespace WarrantyClaim.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WarrantyClaim.Domain.Models.Claim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("claimId");

                    b.Property<string>("ClaimType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("claimType");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<long?>("DistanceMeter")
                        .HasColumnType("bigint")
                        .HasColumnName("distanceMeter");

                    b.Property<string>("FileURL")
                        .HasColumnType("text")
                        .HasColumnName("fileURL");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StaffId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("staffId");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("SUBMITTED")
                        .HasColumnName("status");

                    b.Property<decimal?>("TotalPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("totalPrice");

                    b.Property<string>("VIN")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("nvarchar(17)")
                        .HasColumnName("VIN");

                    b.HasKey("Id");

                    b.HasIndex("StaffId");

                    b.ToTable("claim", (string)null);
                });

            modelBuilder.Entity("WarrantyClaim.Domain.Models.ClaimItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("claimItemId");

                    b.Property<Guid>("ClaimId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("claimId");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgURLs")
                        .HasColumnType("text")
                        .HasColumnName("imgURLs");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("text")
                        .HasColumnName("note");

                    b.Property<string>("PaidBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("paidBy");

                    b.Property<string>("PartSerialNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("partSerialNumber");

                    b.Property<decimal?>("PayAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("payAmount");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("PENDING")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("ClaimId");

                    b.ToTable("claimItem", (string)null);
                });

            modelBuilder.Entity("WarrantyClaim.Domain.Models.PartSupply", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("partSuplyId");

                    b.Property<Guid?>("ClaimItemId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("claimItemId");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewSerialNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("newSerialNumber");

                    b.Property<string>("OldPartSerialNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("OldPartSerialNumber");

                    b.Property<Guid?>("PartId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("partId");

                    b.Property<string>("ShipmentCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("shipmentCode");

                    b.Property<string>("ShipmentRef")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasColumnName("shipmentRef");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("REQUESTED")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("ClaimItemId");

                    b.ToTable("partSuply", (string)null);
                });

            modelBuilder.Entity("WarrantyClaim.Domain.Models.Technician", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("technicianId");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("fullName");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("phone");

                    b.Property<Guid?>("StaffId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("staffId");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("ACTIVE")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("technicians", (string)null);
                });

            modelBuilder.Entity("WarrantyClaim.Domain.Models.WorkOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("workorderId");

                    b.Property<Guid?>("ClaimItemId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("claimItemId");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("endDate");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("startedAt");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("OPEN")
                        .HasColumnName("status");

                    b.Property<Guid?>("TechnicianId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("technicianId");

                    b.Property<decimal?>("WorkingHours")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("workingHours");

                    b.HasKey("Id");

                    b.HasIndex("ClaimItemId");

                    b.HasIndex("TechnicianId");

                    b.ToTable("workorder", (string)null);
                });

            modelBuilder.Entity("WarrantyClaim.Domain.Models.Claim", b =>
                {
                    b.HasOne("WarrantyClaim.Domain.Models.Technician", "Technician")
                        .WithMany()
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Technician");
                });

            modelBuilder.Entity("WarrantyClaim.Domain.Models.ClaimItem", b =>
                {
                    b.HasOne("WarrantyClaim.Domain.Models.Claim", "Claim")
                        .WithMany("Items")
                        .HasForeignKey("ClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Claim");
                });

            modelBuilder.Entity("WarrantyClaim.Domain.Models.PartSupply", b =>
                {
                    b.HasOne("WarrantyClaim.Domain.Models.ClaimItem", "ClaimItem")
                        .WithMany("PartSupplies")
                        .HasForeignKey("ClaimItemId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("ClaimItem");
                });

            modelBuilder.Entity("WarrantyClaim.Domain.Models.WorkOrder", b =>
                {
                    b.HasOne("WarrantyClaim.Domain.Models.ClaimItem", "ClaimItem")
                        .WithMany("WorkOrders")
                        .HasForeignKey("ClaimItemId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("WarrantyClaim.Domain.Models.Technician", "Technician")
                        .WithMany("WorkOrders")
                        .HasForeignKey("TechnicianId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ClaimItem");

                    b.Navigation("Technician");
                });

            modelBuilder.Entity("WarrantyClaim.Domain.Models.Claim", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("WarrantyClaim.Domain.Models.ClaimItem", b =>
                {
                    b.Navigation("PartSupplies");

                    b.Navigation("WorkOrders");
                });

            modelBuilder.Entity("WarrantyClaim.Domain.Models.Technician", b =>
                {
                    b.Navigation("WorkOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
